name: Build and test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types: [created]
env:
  SWIG_VERSION: '4.0.2'
  NUMPY_VERSION: '1.18.0'
  FAISS_OPT_LEVEL: generic
  FAISS_LIBRARY_SUFFIX: ''
  TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
  TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
jobs:
  build-linux:
    runs-on: ubuntu-latest
    container: quay.io/pypa/manylinux2014_x86_64
    strategy:
      matrix:
        python-version:
          - cp36-cp36m
        cuda:
          - false
        opt:
          - 'generic'
    env:
      FAISS_ENABLE_GPU: 'OFF'
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Set up Python
      run: echo "/opt/python/${{ matrix.python-version }}/bin" >> $GITHUB_PATH
    - name: Set optimization level
      if: matrix.opt != 'generic'
      run: |
        echo "FAISS_OPT_LEVEL=${{ matrix.opt }}" >> $GITHUB_ENV
        echo "FAISS_LIBRARY_SUFFIX=_${{ matrix.opt }}" >> $GITHUB_ENV
    - name: Install build dependency
      run: |
        sed -i 's/mirrorlist=https/mirrorlist=http/' /etc/yum.repos.d/epel.repo
        yum install -y \
            openblas-devel \
            openblas-static \
            pcre-devel \
            java-1.8.0-openjdk \
            java-1.8.0-openjdk-devel \
            maven
        curl -fsSLO --retry 3 http://prdownloads.sourceforge.net/swig/swig-${SWIG_VERSION}.tar.gz
        tar xzf swig-${SWIG_VERSION}.tar.gz
        cd swig-${SWIG_VERSION}
        ./configure
        make -j4
        make install
        echo "SWIG=`which swig`" >> $GITHUB_ENV
        cd ..
        echo "FAISS_LDFLAGS=-l:libfaiss${FAISS_LIBRARY_SUFFIX}.a -l:libopenblas.a -lgfortran" >> $GITHUB_ENV
        echo "CXXFLAGS=-fvisibility=hidden -fdata-sections -ffunction-sections" >> $GITHUB_ENV
    - name: Build
      run: |
        make build
    - name: test
      run: |
        make test
    - name: Release Maven package
      uses: samuelmeuli/action-maven-publish@v1
      with:
        gpg_private_key: ${{ secrets.gpg_private_key }}
        gpg_passphrase: ${{ secrets.gpg_passphrase }}
        nexus_username: ${{ secrets.nexus_username }}
        nexus_password: ${{ secrets.nexus_password }}
      env:
        GPG_TTY: $(tty)